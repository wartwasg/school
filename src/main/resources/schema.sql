CREATE TABLE IF NOT EXISTS Student(
	id VARCHAR(50) PRIMARY KEY,
	fname VARCHAR(50) NOT NULL,
	email VARCHAR(50) NOT NULL,
	semester VARCHAR(50) NOT NULL,
	registration_status VARCHAR(50) NOT NULL DEFAULT 'in active'
);

CREATE TABLE IF NOT EXISTS Debt(
	id VARCHAR(50) PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE,
	cash DECIMAL(9,2) NOT NULL
);

CREATE TABLE IF NOT EXISTS Student_debt(
	StID VARCHAR(50),
	DeId VARCHAR(50),
	status VARCHAR(50),
	PRIMARY KEY(StID, DeId),
	FOREIGN KEY(StID) REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(DeId) REFERENCES Debt(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Course(
	code VARCHAR(50) PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE,
	credits DECIMAL(4,2) NOT NULL,
	time VARCHAR(50) NOT NULL,
	semester VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS StCourse(
	StId VARCHAR(50),
	code VARCHAR(50),
	PRIMARY KEY(StId, code),
	FOREIGN KEY(StId) REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(code) REFERENCES Course(code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Payment(
	id VARCHAR(50) PRIMARY KEY,
	g_name VARCHAR(50) NOT NULL,
	g_email VARCHAR(50) NOT NULL,
	phone VARCHAR(50) NOT NULL,
	resident_address VARCHAR(50) NOT NULL,
	city VARCHAR(50) NOT NULL,
	zip_code VARCHAR(50) NOT NULL,
	StId VARCHAR(50),
	FOREIGN KEY(StId) REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Fee(
	id VARCHAR(50) PRIMARY KEY,
	type VARCHAR(50) NOT NULL,
	amount DECIMAL(9,2) NOT NULL,
	card_number VARCHAR(50) NOT NULL,
	card_holder VARCHAR(50) NOT NULL,
	exp VARCHAR(50) NOT NULL,
	cvv VARCHAR(50) NOT NULL,
	billing_zip VARCHAR(50) NOT NULL,
	instructions VARCHAR(150),
	Paid_at TIMESTAMP NOT NULL,
	Fee_year VARCHAR(50) NOT NULL,
	semester VARCHAR(50) NOT NULL,
	Pid VARCHAR(50),
	FOREIGN KEY(Pid) REFERENCES Payment(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Paid_Fee(
	StId VARCHAR(50),
	FeeId VARCHAR(50),
	PRIMARY KEY(StId, FeeId),
	FOREIGN KEY(StId) REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(FeeId) REFERENCES Fee(id) ON DELETE CASCADE ON UPDATE CASCADE
);
